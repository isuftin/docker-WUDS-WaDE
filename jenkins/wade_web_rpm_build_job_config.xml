<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition plugin="git-parameter@0.8.0">
          <name>GIT_OVERLAY_TAG_SELECTOR</name>
          <description></description>
          <uuid>bcb25477-d57b-49d0-ba4f-389e33a273c1</uuid>
          <type>PT_BRANCH_TAG</type>
          <branch></branch>
          <tagFilter>*</tagFilter>
          <branchFilter>.*</branchFilter>
          <sortMode>DESCENDING_SMART</sortMode>
          <defaultValue></defaultValue>
          <selectedValue>TOP</selectedValue>
          <useRepository>WUDS_WaDE_OVERLAY</useRepository>
          <quickFilterEnabled>false</quickFilterEnabled>
        </net.uaznia.lukanus.hudson.plugins.gitparameter.GitParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>GIT_WADE_POSTGRES_VERSION</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>0.0.1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>WADE_OVERLAY</name>
        <url>https://github.com/USGS-CIDA/WUDS_WaDE_OVERLAY</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>overlay</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;Creating build directories&quot;
mkdir $WORKSPACE/rpmbuild \
  $WORKSPACE/rpmbuild/BUILD \
  $WORKSPACE/rpmbuild/RPMS \
  $WORKSPACE/rpmbuild/SOURCES \
  $WORKSPACE/rpmbuild/SPECS \
  $WORKSPACE/rpmbuild/SRPMS

echo &quot;%_topdir      %(echo $WORKSPACE)/rpmbuild&quot; &gt; $WORKSPACE/.rpmmacros
echo &quot;%_smp_mflags  -j3&quot; &gt;&gt; $WORKSPACE/.rpmmacros
echo &quot;%__arch_install_post   /usr/lib/rpm/check-rpaths   /usr/lib/rpm/check-buildroot&quot; &gt;&gt; $WORKSPACE/.rpmmacros</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;Downloading original source&quot;
git clone https://${GITHUB_ACCESS_TOKEN}:x-oauth-basic@github.com/USGS-CIDA/postgres-fullapp.git $WORKSPACE/original/

cd $WORKSPACE/original
git checkout v$GIT_WADE_POSTGRES_VERSION</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

if [[ &quot;${GIT_OVERLAY_TAG_SELECTOR}&quot; == &quot;origin/master&quot; ]]; then
        WADE_VERSION=`/bin/date +%Y%m%d`
else
        # Choose everything previous to dash for the version
        WADE_VERSION=${GIT_OVERLAY_TAG_SELECTOR%-*}
fi

echo &quot;Creating tar package&quot;
cd $WORKSPACE
mkdir -p $WORKSPACE/wade-web-$WADE_VERSION/var/www/html
cp -a $WORKSPACE/original/webservices/WADE $WORKSPACE/wade-web-$WADE_VERSION/var/www/html
cp -a $WORKSPACE/overlay/webservices/WADE $WORKSPACE/wade-web-$WADE_VERSION/var/www/html
tar -zcf $WORKSPACE/wade-web-$WADE_VERSION.tar.gz -C $WORKSPACE ./wade-web-$WADE_VERSION/
mv $WORKSPACE/wade-web-$WADE_VERSION.tar.gz $WORKSPACE/rpmbuild/SOURCES/
cp $WORKSPACE/overlay/rpm_build/wade.spec $WORKSPACE/rpmbuild/SPECS/</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash



WADE_EPOCH=${WADE_EPOCH:-1}

if [[ &quot;${GIT_OVERLAY_TAG_SELECTOR}&quot; == &quot;origin/master&quot; ]]; then
	WADE_VERSION=`/bin/date +%Y%m%d`
    WADE_RELEASE=0
else
    # Choose everything previous to dash for the version
    WADE_VERSION=${GIT_OVERLAY_TAG_SELECTOR%-*}
    # Choose everything after the dash for the release version
    WADE_RELEASE=${GIT_OVERLAY_TAG_SELECTOR#*-}
fi



cd $WORKSPACE/rpmbuild/SPECS/

rpmbuild \
  --define &quot;_topdir $WORKSPACE/rpmbuild&quot; \
  --define &quot;_smp_mflags  -j3&quot; \
  --define &quot;__arch_install_post   /usr/lib/rpm/check-rpaths /usr/lib/rpm/check-buildroot&quot; \
  --define &quot;_wade_version $WADE_VERSION&quot; \
  --define &quot;_wade_release $WADE_RELEASE&quot; \
  --define &quot;_wade_epoch $WADE_EPOCH&quot; -v -ba wade.spec</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>rpmbuild/**/*.rpm</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.BuildTrigger>
      <childProjects>DEPLOY_WEB_RPM_TO_ARTIFACTORY</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.33">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.11">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
          <credentialsId>GITHUB_ACCESS_TOKEN</credentialsId>
          <variable>GITHUB_ACCESS_TOKEN</variable>
        </org.jenkinsci.plugins.credentialsbinding.impl.StringBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>
